pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                echo 'Building code using Maven'
            }
            post {
                success {
                    sendEmailNotification('Build Successful', 'Build completed successfully.')
                }
                failure {
                    sendEmailNotification('Build Failed', 'Build failed. Please check the logs.')
                }
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests using JUnit'
                echo 'Running integration tests using Selenium'
            }
            post {
                success {
                    sendEmailNotification('Unit and Integration Tests Successful', 'Unit and integration tests completed successfully.', 'target/surefire-reports/*.txt')
                }
                failure {
                    sendEmailNotification('Unit and Integration Tests Failed', 'Unit and integration tests failed. Please check the logs.', 'target/surefire-reports/*.txt')
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code using SonarQube'
            }
            post {
                success {
                    sendEmailNotification('Code Analysis Successful', 'Code analysis completed successfully.')
                }
                failure {
                    sendEmailNotification('Code Analysis Failed', 'Code analysis failed. Please check the logs.')
                }
            }
        }
        
        stage('Security Scan') {
            steps {
                echo 'Performing security scan using OWASP ZAP'
            }
            post {
                success {
                    sendEmailNotification('Security Scan Successful', 'Security scan completed successfully.', 'zap/*.html')
                }
                failure {
                    sendEmailNotification('Security Scan Failed', 'Security scan failed. Please check the logs.', 'zap/*.html')
                }
            }
        }
        
        // Add other stages as needed
        
    }
    
    post {
        success {
            echo 'Pipeline Successful: ${currentBuild.fullDisplayName}'
        }
        failure {
            echo 'Pipeline Failed: ${currentBuild.fullDisplayName}'
        }
    }
}

def sendEmailNotification(subject, body, attachmentsPattern = '') {
    emailext (
        subject: subject + ": ${currentBuild.fullDisplayName}",
        body: body,
        to: "ravella.nani123@gmail.com",
        attachmentsPattern: attachmentsPattern
    )
}
