pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Stage 1: Build - Compiles source code and packages it into an executable or distributable format.'
                echo 'Tool used: Maven - a build automation tool used primarily for Java projects.'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Stage 2: Unit and Integration Tests - Runs automated tests to verify the functionality of individual units of code and their interaction.'
                echo 'Tool used: JUnit for unit testing and Selenium for integration testing.'
            }
            post {
                success {
                    echo 'Success: Sending email...'
                    emailext (
                    to: 'ravella.nani123@gmail.com',
                    subject: 'Success: Security Scan',
                    body: 'Security scan completed successfully without any issues.',
                    attachLog: true,
                    replyTo: 'jenkins@example.com', // Optional: Specify a reply-to address
                    retries: 3, // Number of retries (optional)
                    retryWaitTime: 30 // Wait time between retries in seconds (optional)
                )
                }
                failure {
                    echo 'Failure: Sending email...'
                    emailext (
                    to: 'ravella.nani123@gmail.com',
                    subject: 'Failure: Security Scan',
                    body: 'Security scan detected issues. Please check the Jenkins console output for more details.',
                    attachLog: true,
                    replyTo: 'jenkins@example.com', // Optional: Specify a reply-to address
                    retries: 3, // Number of retries (optional)
                    retryWaitTime: 30 // Wait time between retries in seconds (optional)
                )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Stage 3: Code Analysis - Analyzes the source code for potential bugs and anti-patterns to ensure quality and maintainability.'
                echo 'Tool used: SonarQube - provides continuous inspection of code quality.'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Stage 4: Security Scan - Scans the code, dependencies, and configurations for known security vulnerabilities.'
            }
        }
    }
}
